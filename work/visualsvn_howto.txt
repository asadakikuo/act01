■WEBDEV
1.httpd.confを編集

コメントアウトされている２行を活かす
#LoadModule dav_module modules/mod_dav.so
#LoadModule dav_fs_module modules/mod_dav_fs.so

以下の2行を追加。

LoadModule dav_svn_module modules/mod_dav_svn.so
LoadModule authz_svn_module modules/mod_authz_svn.so

追加
Include "/opt/bitnami/apache2/conf/extra/httpd-svn.conf"

２．httpd-svn.confファイルを作成
# Subversion
<Location /svn>
    DAV svn
    # enable view for repositories parent directories
    SVNPath "C:/svnrepository/act01"
    #SVNParentPath ""
    #SVNListParentPath On
  
    # read/write accesses force Basic auth
    AuthType Basic
    AuthName "Subversion repository"
    AuthUserFile C:/Bitnami/redmine-2.6.0-1/apache2/conf/.htpasswd.svn
    Require valid-user
</Location>

3.Basic認証で使用するパスワードファイルを作成

cd C:\Bitnami\redmine-2.6.0-1\apache2\bin
htpasswd -c ../conf/.htpasswd.svn admin

4．モジュールファイルをコピー
subversion/bin にある mod_dav_svn.so と mod_authz_svn.so を、apache2/module にコピー。

5.
authzsvn.confを修正

[/]
admin = rw

■subversionのリポジトリの設定
utl:http://mattari.sumomo.ne.jp/2010/08/bitnami-redmine-stack-%E3%81%A7-subversion-%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B/
を参考に設定
C:\svnrepository\act01\conf にある svnserve.conf を設定します。以下は単純な例です。 


[general] 
anon-access = read 
auth-access = write 
password-db = passwd

passwd ファイルにユーザ名とパスワードを設定します。 


[users] 
admin = admin

redmineに設定するＵＲＬ
svn://localhost/svnrepository/act01

■svnインストールフォルダ
C:\Bitnami\redmine-2.6.0-1\subversion\bin

svn://localhost:3690
■user
id:admin/admin

■リポジトリ
set PATH=%PATH%;C:\Bitnami\redmine-2.6.1-1\subversion\bin
svnadmin create C:\svnrepository\act01
svn mkdir file://localhost/svnrepository/act01/trunk -m "create"
svn mkdir file://localhost/svnrepository/act01/branches -m "create"
svn mkdir file://localhost/svnrepository/act01/tags -m "create"

svn checkout svn://admin@localhost/svnrepository/act01

-----------------------------------------------------------
ここから下は自宅の環境
-----------------------------------------------------------
■リポジトリ
http://localhost:8080/svn/act01

■操作
set path=%PATH%;"C:\webact\VisualSVN Server\bin"
cd C:\webact\00_act01
cd C:\webact\00_act01\act01

・チェックアウト
cd C:\webact\00_act01
svn checkout http://admin@localhost:8080/svn/act01

・更新
svn update src

・コミット
svn commit [ファイル名]|[フォルダ] -m "テスト"
※ファイル名、フォルダー名を省略するとカレントディレクトリとその配下ディレクトリ全部を対象

・ファイル追加
svn add ファイル名
・ファイル削除
svn delete ファイル名 

・ファイルをインポートする
svn import src http://admin@localhost:8080/svn/act01/trunk/src -m "ソース"
svn import フォルダ http://admin@localhost:8080/svn/act01/trunk/フォルダ -m "テスト"

・ファイル変更の破棄
svn revert ファイル名

・状態を確認
svn status

<凡例>
? ファイルを作成したがcommitしていないなどの理由で、バージョン管理されていないファイル
M 修正されたファイル
A 追加予定のファイル
D 削除予定のファイル




svn copy http://admin@localhost:8080/svn/act01/trunk http://admin@localhost:8080/svn/act01/tags/test01 -m "test "




■フォルダ説明
リポジトリに作成する、trunk, branches, tagsにはそれぞれ意味がある。

    trunk ：主な開発ラインを管理するディレクトリ
    tags ：変更を加えることが許されないコピー（タグ）を管理するディレクトリ
    branches ：変更を加えることができるコピー（ブランチ）を管理するディレクトリ

trunkについて

trunkは動作が保証されたソースファイルの本流である。本流のデータなので1つしか存在しない。trunks(英語の複数形)ではないので、基本的にソースの本流は1つしか存在しない。
　
ディレクトリ構成は以下のようになる。
　
……/trunk/対象のファイル
　
branchesについて

branchesは各機能の開発の作業場。不具合がある場合もある。branchesは英語の複数形なのでbranches内には複数のブランチを作成して作業する。
　
ディレクトリ構成としては以下のようになる。
　
……/branches/任意のブランチ名/対象のファイル
　
tagsについて

tagsは納品時など、決まったタイミングのtrunkを取っておく場所。tagsは英語の複数形なのでtags内には複数のタグを作成して作業する。
　
ディレクトリ構成は以下のようになる。
　
……/tags/任意のタグ名/対象のファイル
　
　
これらは
　
trunk → branches → trunk( → tags) → branches → trunk( → tags) ……
　
という順に上手く使い分けながら作業する。
　
具代的には、以下のような流れになる。

    動作確認済みの状態でブランチをトランクにマージする
    トランクからタグを作成する
    トランクからブランチを作成する



svnadmin create C:\svnrepository\android

svn checkout svn://admin@localhost/svnrepository/android
